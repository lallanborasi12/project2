{"ast":null,"code":"import React,{useEffect}from\"react\";import{useNavigate,useParams}from\"react-router-dom\";import API_BASE_URL from\"./constants\";const PayResponse=()=>{let history=useNavigate();const{getTranId}=useParams();// const pg_res = new URLSearchParams(document.location.search);\n// const decode_res = '?' + atob(pg_res.get('res'));\n// const res_data = new URLSearchParams(decode_res);\nconst resObject={};useEffect(()=>{if(localStorage.getItem('state')){let base64_data=JSON.parse(atob(localStorage.getItem('state').slice(6,-4)));let accessToken=base64_data.responce.accessToken;statusValidatior(\"accessToken\",getTranId);// for (const [key, value] of res_data.entries()) {resObject[key] = value;// }\n}else{history('/');}});const statusValidatior=async(aT,getTranId)=>{const get_options={method:\"GET\",headers:{'Content-Type':'application/json'}};fetch(API_BASE_URL+'/pro/p3/pg/merchant/statusvalidator/web/'+getTranId,get_options).then(res=>res.json()).then(result=>{if(result.status===\"COMPLETED\"){localStorage.setItem('__orderconfirm',result.transactionId);history('/register-form.html',{state:result});// history('/offers/thank-you.php', { state: result });\n}else{if(localStorage.getItem('state')){let base64_data=JSON.parse(atob(localStorage.getItem('state').slice(6,-4)));base64_data.responce.caseStudy.message=result.message;history('/final.php',{state:base64_data});}else{history('/');}}}).catch(error=>{history('/');});};};export default PayResponse;","map":{"version":3,"names":["React","useEffect","useNavigate","useParams","API_BASE_URL","PayResponse","history","getTranId","resObject","localStorage","getItem","base64_data","JSON","parse","atob","slice","accessToken","responce","statusValidatior","aT","get_options","method","headers","fetch","then","res","json","result","status","setItem","transactionId","state","caseStudy","message","catch","error"],"sources":["/var/www/html8/pro.ketobalanced.com/glb.keto/src/config/PayResponse.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport API_BASE_URL from \"./constants\";\r\nconst PayResponse = () => {\r\n\r\n    let history = useNavigate();\r\n    const { getTranId } = useParams();\r\n    // const pg_res = new URLSearchParams(document.location.search);\r\n    // const decode_res = '?' + atob(pg_res.get('res'));\r\n    // const res_data = new URLSearchParams(decode_res);\r\n    const resObject = {};\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem('state')) {\r\n            let base64_data = JSON.parse(atob(localStorage.getItem('state').slice(6, -4)));\r\n            let accessToken = base64_data.responce.accessToken;\r\n\r\n            statusValidatior(\"accessToken\", getTranId);\r\n\r\n            // for (const [key, value] of res_data.entries()) {resObject[key] = value;// }\r\n\r\n        } else {\r\n            history('/');\r\n        }\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n    const statusValidatior = async (aT, getTranId) => {\r\n\r\n        const get_options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        fetch(API_BASE_URL + '/pro/p3/pg/merchant/statusvalidator/web/' + getTranId, get_options)\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n\r\n                if (result.status === \"COMPLETED\") {\r\n                    localStorage.setItem('__orderconfirm', result.transactionId);\r\n                    history('/register-form.html', { state: result });\r\n                    // history('/offers/thank-you.php', { state: result });\r\n                } else {\r\n                    if (localStorage.getItem('state')) {\r\n                        let base64_data = JSON.parse(atob(localStorage.getItem('state').slice(6, -4)));\r\n                        base64_data.responce.caseStudy.message = result.message;\r\n\r\n                        history('/final.php', { state: base64_data });\r\n                    } else {\r\n                        history('/');\r\n                    }\r\n                }\r\n            }).catch((error) => {\r\n                history('/');\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default PayResponse;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CACzD,MAAO,CAAAC,YAAY,KAAM,aAAa,CACtC,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CAEtB,GAAI,CAAAC,OAAO,CAAGJ,WAAW,CAAC,CAAC,CAC3B,KAAM,CAAEK,SAAU,CAAC,CAAGJ,SAAS,CAAC,CAAC,CACjC;AACA;AACA;AACA,KAAM,CAAAK,SAAS,CAAG,CAAC,CAAC,CAMpBP,SAAS,CAAC,IAAM,CAEZ,GAAIQ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE,CAC/B,GAAI,CAAAC,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACK,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAC9E,GAAI,CAAAC,WAAW,CAAGL,WAAW,CAACM,QAAQ,CAACD,WAAW,CAElDE,gBAAgB,CAAC,aAAa,CAAEX,SAAS,CAAC,CAE1C;AAEJ,CAAC,IAAM,CACHD,OAAO,CAAC,GAAG,CAAC,CAChB,CAKJ,CAAC,CAAC,CAEF,KAAM,CAAAY,gBAAgB,CAAG,KAAAA,CAAOC,EAAE,CAAEZ,SAAS,GAAK,CAE9C,KAAM,CAAAa,WAAW,CAAG,CAChBC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAEDC,KAAK,CAACnB,YAAY,CAAG,0CAA0C,CAAGG,SAAS,CAAEa,WAAW,CAAC,CACpFI,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAEG,MAAM,EAAK,CAEd,GAAIA,MAAM,CAACC,MAAM,GAAK,WAAW,CAAE,CAC/BnB,YAAY,CAACoB,OAAO,CAAC,gBAAgB,CAAEF,MAAM,CAACG,aAAa,CAAC,CAC5DxB,OAAO,CAAC,qBAAqB,CAAE,CAAEyB,KAAK,CAAEJ,MAAO,CAAC,CAAC,CACjD;AACJ,CAAC,IAAM,CACH,GAAIlB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE,CAC/B,GAAI,CAAAC,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACK,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAC9EJ,WAAW,CAACM,QAAQ,CAACe,SAAS,CAACC,OAAO,CAAGN,MAAM,CAACM,OAAO,CAEvD3B,OAAO,CAAC,YAAY,CAAE,CAAEyB,KAAK,CAAEpB,WAAY,CAAC,CAAC,CACjD,CAAC,IAAM,CACHL,OAAO,CAAC,GAAG,CAAC,CAChB,CACJ,CACJ,CAAC,CAAC,CAAC4B,KAAK,CAAEC,KAAK,EAAK,CAChB7B,OAAO,CAAC,GAAG,CAAC,CAChB,CAAC,CAAC,CACV,CAAC,CAEL,CAAC,CAED,cAAe,CAAAD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}