{"ast":null,"code":"import API_BASE_URL from\"../../config/constants\";// Function that returns an array of emails\nexport const getFreeEmails=async()=>{const freeemail_api_url=API_BASE_URL+\"/pre/prouseremail\";const get_body={method:\"GET\",headers:{\"Content-Type\":\"application/json\"}};try{const res=await fetch(freeemail_api_url,get_body);const result=await res.json();return result;// This is now returning the data after awaiting fetch\n}catch(error){return[];// If there's an error, return an empty array\n}};// Now we can assign freeEmails asynchronously\nexport const freeEmails=(await getFreeEmails())||[];","map":{"version":3,"names":["API_BASE_URL","getFreeEmails","freeemail_api_url","get_body","method","headers","res","fetch","result","json","error","freeEmails"],"sources":["/Users/apple/Desktop/newgit/src/components/common/StringData.js"],"sourcesContent":["import API_BASE_URL from \"../../config/constants\";\n\n// Function that returns an array of emails\nexport const getFreeEmails = async () => {\n  const freeemail_api_url = API_BASE_URL + \"/pre/prouseremail\";\n  const get_body = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await fetch(freeemail_api_url, get_body);\n    const result = await res.json();\n    return result; // This is now returning the data after awaiting fetch\n  } catch (error) {\n    return []; // If there's an error, return an empty array\n  }\n};\n\n// Now we can assign freeEmails asynchronously\nexport const freeEmails = (await getFreeEmails()) || [];\n"],"mappings":"AAAA,MAAO,CAAAA,YAAY,KAAM,wBAAwB,CAEjD;AACA,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CACvC,KAAM,CAAAC,iBAAiB,CAAGF,YAAY,CAAG,mBAAmB,CAC5D,KAAM,CAAAG,QAAQ,CAAG,CACfC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAED,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAACL,iBAAiB,CAAEC,QAAQ,CAAC,CACpD,KAAM,CAAAK,MAAM,CAAG,KAAM,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CAC/B,MAAO,CAAAD,MAAM,CAAE;AACjB,CAAE,MAAOE,KAAK,CAAE,CACd,MAAO,EAAE,CAAE;AACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,CAAC,KAAM,CAAAV,aAAa,CAAC,CAAC,GAAK,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}